@inherits LayoutBase
@inject IStringLocalizer<FeedbackSubmission> LocalizerFeedback

<a class="nav-link px-0 py-0 position-relative" href="" data-bs-toggle="modal" data-bs-target="#feedbackModal" @onclick="@SetFeedbackSubmissionLanguageAsync">
    <i class="fa-solid fa-bug"></i>
    <span class="position-absolute top-0 start-100 translate-middle p-1 bg-warning bg-opacity-75 border border-light rounded-circle">
        <span class="visually-hidden">New Feature</span>
    </span>
</a>

@code {
    private string feedbackModule = "./js/feedback.js";

    protected override async Task OnInitializedAsync()
    {
        IJSObjectReference module = await ImportModuleReferenceAsync(feedbackModule);
        await module.InvokeVoidAsync("setRef", DotNetObjectReference.Create(this));

        await base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            IJSObjectReference module = await ImportModuleReferenceAsync(feedbackModule);
            await module.InvokeVoidAsync("setupEventListeners");
        }

        await base.OnAfterRenderAsync(firstRender);
    }

    private async Task SetFeedbackSubmissionLanguageAsync()
    {
        IJSObjectReference module = await ImportModuleReferenceAsync(feedbackModule);
        string[] feedbackSubmissionTexts = new[]
        {
                LocalizerFeedback["FeedbackSubmissionTitle"].Value,
                LocalizerFeedback["CancelFeedbackButtonText"].Value,
                LocalizerFeedback["SubmitFeedbackButtonText"].Value,
                LocalizerFeedback["OldQuestionPlaceholder"].Value,
                LocalizerFeedback["OldQuestionLabel"].Value,
                LocalizerFeedback["OldQuestionHelpText"].Value,
                LocalizerFeedback["NewQuestionPlaceholder"].Value,
                LocalizerFeedback["NewQuestionLabel"].Value,
                LocalizerFeedback["NewQuestionHelpText"].Value,
                LocalizerFeedback["NewAnswerPlaceholder"].Value,
                LocalizerFeedback["NewAnswerLabel"].Value,
                LocalizerFeedback["NewAnswerHelpText"].Value
    };

        await module.InvokeVoidAsync("setFeedbackLanguage", (object)feedbackSubmissionTexts);
    }

    [JSInvokable]
    public void FeedbackSubmittedSuccessfully()
    {
    }

    [JSInvokable]
    public void HandleError(string message)
    {
    }
}
